{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","buttonsStatus","alphaSort","lengthSort","reset","App","useState","visibleGoods","setVisibleGoods","activeReverse","setReverseActive","activeButtons","setActiveButtons","sortBy","sortMethod","sort","a","b","localeCompare","length","Error","className","onClick","type","cn","reverse","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,QACnBC,EAAiB,SAEjBC,EAAgB,CACpBC,WAAW,EACXC,YAAY,EACZC,OAAO,GAGIC,EAAM,WACjB,MAAwCC,mBAAS,GAAD,OAAKR,IAArD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,mBAASL,GAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KAiCA,SAASC,EAAOC,GACd,OAAIA,IAAef,GACjBa,EAAiB,CACfV,WAAW,EACXC,YAAY,EACZC,OAAO,IAGFI,EAAgBD,EACpBQ,KAAKN,EACF,SAACO,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,IAC1B,SAACD,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,OAG9BF,IAAed,GACjBY,EAAiB,CACfV,WAAW,EACXC,YAAY,EACZC,OAAO,IAGFI,EAAgBD,EACpBQ,KAAKN,EACF,SAACO,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,QACvB,SAACH,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,WAGxB,IAAIC,MAAM,uBAGnB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMT,EAAOd,IACtBwB,KAAK,SACLF,UACAG,IAAG,SACD,UACA,CAAE,WAAYb,EAAcT,YANhC,iCAWA,wBACEoB,QAAS,kBAAMT,EAAOb,IACtBuB,KAAK,SACLF,UACAG,IAAG,SACD,aACA,CAAE,WAAYb,EAAcR,aANhC,4BAWA,wBACEmB,QAAS,kBA5Efd,EAAgBD,EAAakB,WAC7Bf,GAAkBD,GAClBG,EAAiB,CACfV,UAAWS,EAAcT,UACzBC,WAAYQ,EAAcR,WAC1BC,OAAO,UAGJK,GACAE,EAAcT,WACdS,EAAcR,YAEjBS,EAAiB,CACfV,UAAWS,EAAcT,UACzBC,WAAYQ,EAAcR,WAC1BC,OAAO,MA8DLmB,KAAK,SACLF,UACAG,IACE,SACA,aACA,CAAE,WAAYf,IAPlB,qBAaCE,EAAcP,OACb,wBACEkB,QAAS,kBApGjBd,EAAgB,GAAD,OAAKV,IACpBY,GAAiB,QACjBE,EAAiB,CACfV,WAAW,EACXC,YAAY,EACZC,OAAO,KAgGDmB,KAAK,SACLF,UACAG,IACE,SACA,YACA,CAAE,WAAYb,EAAcP,QAPhC,sBAeJ,6BACGG,EAAamB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpJjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5c78e0b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alpha';\nconst SORT_BY_LENGTH = 'length';\n\nconst buttonsStatus = {\n  alphaSort: true,\n  lengthSort: true,\n  reset: false,\n};\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState([...goodsFromServer]);\n  const [activeReverse, setReverseActive] = useState(true);\n  const [activeButtons, setActiveButtons] = useState(buttonsStatus);\n\n  function resetGoods() {\n    setVisibleGoods([...goodsFromServer]);\n    setReverseActive(true);\n    setActiveButtons({\n      alphaSort: true,\n      lengthSort: true,\n      reset: false,\n    });\n  }\n\n  function getReverseResult() {\n    setVisibleGoods(visibleGoods.reverse());\n    setReverseActive(!activeReverse);\n    setActiveButtons({\n      alphaSort: activeButtons.alphaSort,\n      lengthSort: activeButtons.lengthSort,\n      reset: true,\n    });\n\n    if (!activeReverse\n      && activeButtons.alphaSort\n      && activeButtons.lengthSort\n    ) {\n      setActiveButtons({\n        alphaSort: activeButtons.alphaSort,\n        lengthSort: activeButtons.lengthSort,\n        reset: false,\n      });\n    }\n  }\n\n  function sortBy(sortMethod) {\n    if (sortMethod === SORT_BY_ALPHABET) {\n      setActiveButtons({\n        alphaSort: false,\n        lengthSort: true,\n        reset: true,\n      });\n\n      return setVisibleGoods(visibleGoods\n        .sort(activeReverse\n          ? (a, b) => a.localeCompare(b)\n          : (a, b) => b.localeCompare(a)));\n    }\n\n    if (sortMethod === SORT_BY_LENGTH) {\n      setActiveButtons({\n        alphaSort: true,\n        lengthSort: false,\n        reset: true,\n      });\n\n      return setVisibleGoods(visibleGoods\n        .sort(activeReverse\n          ? (a, b) => a.length - b.length\n          : (a, b) => b.length - a.length));\n    }\n\n    return new Error('invalid method sort');\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => sortBy(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={\n          cn('button',\n            'is-info',\n            { 'is-light': activeButtons.alphaSort })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => sortBy(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={\n          cn('button',\n            'is-success',\n            { 'is-light': activeButtons.lengthSort })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => getReverseResult()}\n          type=\"button\"\n          className={\n          cn(\n            'button',\n            'is-warning',\n            { 'is-light': activeReverse },\n          )}\n        >\n          Reverse\n        </button>\n\n        {activeButtons.reset && (\n          <button\n            onClick={() => resetGoods()}\n            type=\"button\"\n            className={\n            cn(\n              'button',\n              'is-danger',\n              { 'is-light': activeButtons.reset },\n            )}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}